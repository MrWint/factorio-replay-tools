use enum_primitive_derive::Primitive;
use factorio_serialize_derive::{MapReadWriteEnumU16, ReplayReadWriteEnumU16};
use num_traits::{FromPrimitive, ToPrimitive};


// Version: 1.1.107
// Extraction method: util::export_prototypes
#[derive(Clone, Copy, Debug, Eq, Hash, PartialEq, Primitive, ReplayReadWriteEnumU16, MapReadWriteEnumU16)]
pub enum Achievement {
  GettingOnTrack = 1,
  EcoUnfriendly = 2,
  TechManiac = 3,
  SmokeMeAKipperIWillBeBackForBreakfast = 4,
  ItStinksAndTheyDontLikeIt = 5,
  AutomatedConstruction = 6,
  YouAreDoingItRight = 7,
  AutomatedCleanup = 8,
  YouHaveGotAPackage = 9,
  DeliveryService = 10,
  TransFactorioExpress = 11,
  WatchYourStep = 12,
  Golem = 13,
  GettingOnTrackLikeAPro = 14,
  MassProduction1 = 15,
  MassProduction2 = 16,
  MassProduction3 = 17,
  CircuitVeteran1 = 18,
  CircuitVeteran2 = 19,
  CircuitVeteran3 = 20,
  ComputerAge1 = 21,
  ComputerAge2 = 22,
  ComputerAge3 = 23,
  IronThrone1 = 24,
  IronThrone2 = 25,
  IronThrone3 = 26,
  Solaris = 27,
  Steamrolled = 28,
  Pyromaniac = 29,
  RunForrestRun = 30,
  Minions = 31,
  LazyBastard = 32,
  SteamAllTheWay = 33,
  RainingBullets = 34,
  LogisticNetworkEmbargo = 35,
  NoTimeForChitchat = 36,
  ThereIsNoSpoon = 37,
  SoLongAndThanksForAllTheFish = 38,
}
impl Achievement {
  pub fn name(self) -> &'static str {
    match self {
      Achievement::GettingOnTrack => "getting-on-track",
      Achievement::EcoUnfriendly => "eco-unfriendly",
      Achievement::TechManiac => "tech-maniac",
      Achievement::SmokeMeAKipperIWillBeBackForBreakfast => "smoke-me-a-kipper-i-will-be-back-for-breakfast",
      Achievement::ItStinksAndTheyDontLikeIt => "it-stinks-and-they-dont-like-it",
      Achievement::AutomatedConstruction => "automated-construction",
      Achievement::YouAreDoingItRight => "you-are-doing-it-right",
      Achievement::AutomatedCleanup => "automated-cleanup",
      Achievement::YouHaveGotAPackage => "you-have-got-a-package",
      Achievement::DeliveryService => "delivery-service",
      Achievement::TransFactorioExpress => "trans-factorio-express",
      Achievement::WatchYourStep => "watch-your-step",
      Achievement::Golem => "golem",
      Achievement::GettingOnTrackLikeAPro => "getting-on-track-like-a-pro",
      Achievement::MassProduction1 => "mass-production-1",
      Achievement::MassProduction2 => "mass-production-2",
      Achievement::MassProduction3 => "mass-production-3",
      Achievement::CircuitVeteran1 => "circuit-veteran-1",
      Achievement::CircuitVeteran2 => "circuit-veteran-2",
      Achievement::CircuitVeteran3 => "circuit-veteran-3",
      Achievement::ComputerAge1 => "computer-age-1",
      Achievement::ComputerAge2 => "computer-age-2",
      Achievement::ComputerAge3 => "computer-age-3",
      Achievement::IronThrone1 => "iron-throne-1",
      Achievement::IronThrone2 => "iron-throne-2",
      Achievement::IronThrone3 => "iron-throne-3",
      Achievement::Solaris => "solaris",
      Achievement::Steamrolled => "steamrolled",
      Achievement::Pyromaniac => "pyromaniac",
      Achievement::RunForrestRun => "run-forrest-run",
      Achievement::Minions => "minions",
      Achievement::LazyBastard => "lazy-bastard",
      Achievement::SteamAllTheWay => "steam-all-the-way",
      Achievement::RainingBullets => "raining-bullets",
      Achievement::LogisticNetworkEmbargo => "logistic-network-embargo",
      Achievement::NoTimeForChitchat => "no-time-for-chitchat",
      Achievement::ThereIsNoSpoon => "there-is-no-spoon",
      Achievement::SoLongAndThanksForAllTheFish => "so-long-and-thanks-for-all-the-fish",
    }
  }
  pub fn from_name(name: &str) -> Achievement {
    match name {
      "getting-on-track" => Achievement::GettingOnTrack,
      "eco-unfriendly" => Achievement::EcoUnfriendly,
      "tech-maniac" => Achievement::TechManiac,
      "smoke-me-a-kipper-i-will-be-back-for-breakfast" => Achievement::SmokeMeAKipperIWillBeBackForBreakfast,
      "it-stinks-and-they-dont-like-it" => Achievement::ItStinksAndTheyDontLikeIt,
      "automated-construction" => Achievement::AutomatedConstruction,
      "you-are-doing-it-right" => Achievement::YouAreDoingItRight,
      "automated-cleanup" => Achievement::AutomatedCleanup,
      "you-have-got-a-package" => Achievement::YouHaveGotAPackage,
      "delivery-service" => Achievement::DeliveryService,
      "trans-factorio-express" => Achievement::TransFactorioExpress,
      "watch-your-step" => Achievement::WatchYourStep,
      "golem" => Achievement::Golem,
      "getting-on-track-like-a-pro" => Achievement::GettingOnTrackLikeAPro,
      "mass-production-1" => Achievement::MassProduction1,
      "mass-production-2" => Achievement::MassProduction2,
      "mass-production-3" => Achievement::MassProduction3,
      "circuit-veteran-1" => Achievement::CircuitVeteran1,
      "circuit-veteran-2" => Achievement::CircuitVeteran2,
      "circuit-veteran-3" => Achievement::CircuitVeteran3,
      "computer-age-1" => Achievement::ComputerAge1,
      "computer-age-2" => Achievement::ComputerAge2,
      "computer-age-3" => Achievement::ComputerAge3,
      "iron-throne-1" => Achievement::IronThrone1,
      "iron-throne-2" => Achievement::IronThrone2,
      "iron-throne-3" => Achievement::IronThrone3,
      "solaris" => Achievement::Solaris,
      "steamrolled" => Achievement::Steamrolled,
      "pyromaniac" => Achievement::Pyromaniac,
      "run-forrest-run" => Achievement::RunForrestRun,
      "minions" => Achievement::Minions,
      "lazy-bastard" => Achievement::LazyBastard,
      "steam-all-the-way" => Achievement::SteamAllTheWay,
      "raining-bullets" => Achievement::RainingBullets,
      "logistic-network-embargo" => Achievement::LogisticNetworkEmbargo,
      "no-time-for-chitchat" => Achievement::NoTimeForChitchat,
      "there-is-no-spoon" => Achievement::ThereIsNoSpoon,
      "so-long-and-thanks-for-all-the-fish" => Achievement::SoLongAndThanksForAllTheFish,
      name => panic!("unknown Achievement \"{name}\""),
    }
  }
}